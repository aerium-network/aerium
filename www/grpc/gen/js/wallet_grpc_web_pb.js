/**
 * @fileoverview gRPC-Web generated client stub for aerium
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: wallet.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');

const proto = {};
proto.aerium = require('./wallet_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.aerium.WalletClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.aerium.WalletPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aerium.CreateWalletRequest,
 *   !proto.aerium.CreateWalletResponse>}
 */
const methodDescriptor_Wallet_CreateWallet = new grpc.web.MethodDescriptor(
  '/aerium.Wallet/CreateWallet',
  grpc.web.MethodType.UNARY,
  proto.aerium.CreateWalletRequest,
  proto.aerium.CreateWalletResponse,
  /**
   * @param {!proto.aerium.CreateWalletRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aerium.CreateWalletResponse.deserializeBinary
);


/**
 * @param {!proto.aerium.CreateWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aerium.CreateWalletResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aerium.CreateWalletResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aerium.WalletClient.prototype.createWallet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aerium.Wallet/CreateWallet',
      request,
      metadata || {},
      methodDescriptor_Wallet_CreateWallet,
      callback);
};


/**
 * @param {!proto.aerium.CreateWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aerium.CreateWalletResponse>}
 *     Promise that resolves to the response
 */
proto.aerium.WalletPromiseClient.prototype.createWallet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aerium.Wallet/CreateWallet',
      request,
      metadata || {},
      methodDescriptor_Wallet_CreateWallet);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aerium.RestoreWalletRequest,
 *   !proto.aerium.RestoreWalletResponse>}
 */
const methodDescriptor_Wallet_RestoreWallet = new grpc.web.MethodDescriptor(
  '/aerium.Wallet/RestoreWallet',
  grpc.web.MethodType.UNARY,
  proto.aerium.RestoreWalletRequest,
  proto.aerium.RestoreWalletResponse,
  /**
   * @param {!proto.aerium.RestoreWalletRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aerium.RestoreWalletResponse.deserializeBinary
);


/**
 * @param {!proto.aerium.RestoreWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aerium.RestoreWalletResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aerium.RestoreWalletResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aerium.WalletClient.prototype.restoreWallet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aerium.Wallet/RestoreWallet',
      request,
      metadata || {},
      methodDescriptor_Wallet_RestoreWallet,
      callback);
};


/**
 * @param {!proto.aerium.RestoreWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aerium.RestoreWalletResponse>}
 *     Promise that resolves to the response
 */
proto.aerium.WalletPromiseClient.prototype.restoreWallet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aerium.Wallet/RestoreWallet',
      request,
      metadata || {},
      methodDescriptor_Wallet_RestoreWallet);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aerium.LoadWalletRequest,
 *   !proto.aerium.LoadWalletResponse>}
 */
const methodDescriptor_Wallet_LoadWallet = new grpc.web.MethodDescriptor(
  '/aerium.Wallet/LoadWallet',
  grpc.web.MethodType.UNARY,
  proto.aerium.LoadWalletRequest,
  proto.aerium.LoadWalletResponse,
  /**
   * @param {!proto.aerium.LoadWalletRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aerium.LoadWalletResponse.deserializeBinary
);


/**
 * @param {!proto.aerium.LoadWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aerium.LoadWalletResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aerium.LoadWalletResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aerium.WalletClient.prototype.loadWallet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aerium.Wallet/LoadWallet',
      request,
      metadata || {},
      methodDescriptor_Wallet_LoadWallet,
      callback);
};


/**
 * @param {!proto.aerium.LoadWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aerium.LoadWalletResponse>}
 *     Promise that resolves to the response
 */
proto.aerium.WalletPromiseClient.prototype.loadWallet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aerium.Wallet/LoadWallet',
      request,
      metadata || {},
      methodDescriptor_Wallet_LoadWallet);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aerium.UnloadWalletRequest,
 *   !proto.aerium.UnloadWalletResponse>}
 */
const methodDescriptor_Wallet_UnloadWallet = new grpc.web.MethodDescriptor(
  '/aerium.Wallet/UnloadWallet',
  grpc.web.MethodType.UNARY,
  proto.aerium.UnloadWalletRequest,
  proto.aerium.UnloadWalletResponse,
  /**
   * @param {!proto.aerium.UnloadWalletRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aerium.UnloadWalletResponse.deserializeBinary
);


/**
 * @param {!proto.aerium.UnloadWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aerium.UnloadWalletResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aerium.UnloadWalletResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aerium.WalletClient.prototype.unloadWallet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aerium.Wallet/UnloadWallet',
      request,
      metadata || {},
      methodDescriptor_Wallet_UnloadWallet,
      callback);
};


/**
 * @param {!proto.aerium.UnloadWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aerium.UnloadWalletResponse>}
 *     Promise that resolves to the response
 */
proto.aerium.WalletPromiseClient.prototype.unloadWallet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aerium.Wallet/UnloadWallet',
      request,
      metadata || {},
      methodDescriptor_Wallet_UnloadWallet);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aerium.GetTotalBalanceRequest,
 *   !proto.aerium.GetTotalBalanceResponse>}
 */
const methodDescriptor_Wallet_GetTotalBalance = new grpc.web.MethodDescriptor(
  '/aerium.Wallet/GetTotalBalance',
  grpc.web.MethodType.UNARY,
  proto.aerium.GetTotalBalanceRequest,
  proto.aerium.GetTotalBalanceResponse,
  /**
   * @param {!proto.aerium.GetTotalBalanceRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aerium.GetTotalBalanceResponse.deserializeBinary
);


/**
 * @param {!proto.aerium.GetTotalBalanceRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aerium.GetTotalBalanceResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aerium.GetTotalBalanceResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aerium.WalletClient.prototype.getTotalBalance =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aerium.Wallet/GetTotalBalance',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetTotalBalance,
      callback);
};


/**
 * @param {!proto.aerium.GetTotalBalanceRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aerium.GetTotalBalanceResponse>}
 *     Promise that resolves to the response
 */
proto.aerium.WalletPromiseClient.prototype.getTotalBalance =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aerium.Wallet/GetTotalBalance',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetTotalBalance);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aerium.SignRawTransactionRequest,
 *   !proto.aerium.SignRawTransactionResponse>}
 */
const methodDescriptor_Wallet_SignRawTransaction = new grpc.web.MethodDescriptor(
  '/aerium.Wallet/SignRawTransaction',
  grpc.web.MethodType.UNARY,
  proto.aerium.SignRawTransactionRequest,
  proto.aerium.SignRawTransactionResponse,
  /**
   * @param {!proto.aerium.SignRawTransactionRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aerium.SignRawTransactionResponse.deserializeBinary
);


/**
 * @param {!proto.aerium.SignRawTransactionRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aerium.SignRawTransactionResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aerium.SignRawTransactionResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aerium.WalletClient.prototype.signRawTransaction =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aerium.Wallet/SignRawTransaction',
      request,
      metadata || {},
      methodDescriptor_Wallet_SignRawTransaction,
      callback);
};


/**
 * @param {!proto.aerium.SignRawTransactionRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aerium.SignRawTransactionResponse>}
 *     Promise that resolves to the response
 */
proto.aerium.WalletPromiseClient.prototype.signRawTransaction =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aerium.Wallet/SignRawTransaction',
      request,
      metadata || {},
      methodDescriptor_Wallet_SignRawTransaction);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aerium.GetValidatorAddressRequest,
 *   !proto.aerium.GetValidatorAddressResponse>}
 */
const methodDescriptor_Wallet_GetValidatorAddress = new grpc.web.MethodDescriptor(
  '/aerium.Wallet/GetValidatorAddress',
  grpc.web.MethodType.UNARY,
  proto.aerium.GetValidatorAddressRequest,
  proto.aerium.GetValidatorAddressResponse,
  /**
   * @param {!proto.aerium.GetValidatorAddressRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aerium.GetValidatorAddressResponse.deserializeBinary
);


/**
 * @param {!proto.aerium.GetValidatorAddressRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aerium.GetValidatorAddressResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aerium.GetValidatorAddressResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aerium.WalletClient.prototype.getValidatorAddress =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aerium.Wallet/GetValidatorAddress',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetValidatorAddress,
      callback);
};


/**
 * @param {!proto.aerium.GetValidatorAddressRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aerium.GetValidatorAddressResponse>}
 *     Promise that resolves to the response
 */
proto.aerium.WalletPromiseClient.prototype.getValidatorAddress =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aerium.Wallet/GetValidatorAddress',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetValidatorAddress);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aerium.GetNewAddressRequest,
 *   !proto.aerium.GetNewAddressResponse>}
 */
const methodDescriptor_Wallet_GetNewAddress = new grpc.web.MethodDescriptor(
  '/aerium.Wallet/GetNewAddress',
  grpc.web.MethodType.UNARY,
  proto.aerium.GetNewAddressRequest,
  proto.aerium.GetNewAddressResponse,
  /**
   * @param {!proto.aerium.GetNewAddressRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aerium.GetNewAddressResponse.deserializeBinary
);


/**
 * @param {!proto.aerium.GetNewAddressRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aerium.GetNewAddressResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aerium.GetNewAddressResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aerium.WalletClient.prototype.getNewAddress =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aerium.Wallet/GetNewAddress',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetNewAddress,
      callback);
};


/**
 * @param {!proto.aerium.GetNewAddressRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aerium.GetNewAddressResponse>}
 *     Promise that resolves to the response
 */
proto.aerium.WalletPromiseClient.prototype.getNewAddress =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aerium.Wallet/GetNewAddress',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetNewAddress);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aerium.GetAddressHistoryRequest,
 *   !proto.aerium.GetAddressHistoryResponse>}
 */
const methodDescriptor_Wallet_GetAddressHistory = new grpc.web.MethodDescriptor(
  '/aerium.Wallet/GetAddressHistory',
  grpc.web.MethodType.UNARY,
  proto.aerium.GetAddressHistoryRequest,
  proto.aerium.GetAddressHistoryResponse,
  /**
   * @param {!proto.aerium.GetAddressHistoryRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aerium.GetAddressHistoryResponse.deserializeBinary
);


/**
 * @param {!proto.aerium.GetAddressHistoryRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aerium.GetAddressHistoryResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aerium.GetAddressHistoryResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aerium.WalletClient.prototype.getAddressHistory =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aerium.Wallet/GetAddressHistory',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetAddressHistory,
      callback);
};


/**
 * @param {!proto.aerium.GetAddressHistoryRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aerium.GetAddressHistoryResponse>}
 *     Promise that resolves to the response
 */
proto.aerium.WalletPromiseClient.prototype.getAddressHistory =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aerium.Wallet/GetAddressHistory',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetAddressHistory);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aerium.SignMessageRequest,
 *   !proto.aerium.SignMessageResponse>}
 */
const methodDescriptor_Wallet_SignMessage = new grpc.web.MethodDescriptor(
  '/aerium.Wallet/SignMessage',
  grpc.web.MethodType.UNARY,
  proto.aerium.SignMessageRequest,
  proto.aerium.SignMessageResponse,
  /**
   * @param {!proto.aerium.SignMessageRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aerium.SignMessageResponse.deserializeBinary
);


/**
 * @param {!proto.aerium.SignMessageRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aerium.SignMessageResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aerium.SignMessageResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aerium.WalletClient.prototype.signMessage =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aerium.Wallet/SignMessage',
      request,
      metadata || {},
      methodDescriptor_Wallet_SignMessage,
      callback);
};


/**
 * @param {!proto.aerium.SignMessageRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aerium.SignMessageResponse>}
 *     Promise that resolves to the response
 */
proto.aerium.WalletPromiseClient.prototype.signMessage =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aerium.Wallet/SignMessage',
      request,
      metadata || {},
      methodDescriptor_Wallet_SignMessage);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aerium.GetTotalStakeRequest,
 *   !proto.aerium.GetTotalStakeResponse>}
 */
const methodDescriptor_Wallet_GetTotalStake = new grpc.web.MethodDescriptor(
  '/aerium.Wallet/GetTotalStake',
  grpc.web.MethodType.UNARY,
  proto.aerium.GetTotalStakeRequest,
  proto.aerium.GetTotalStakeResponse,
  /**
   * @param {!proto.aerium.GetTotalStakeRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aerium.GetTotalStakeResponse.deserializeBinary
);


/**
 * @param {!proto.aerium.GetTotalStakeRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aerium.GetTotalStakeResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aerium.GetTotalStakeResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aerium.WalletClient.prototype.getTotalStake =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aerium.Wallet/GetTotalStake',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetTotalStake,
      callback);
};


/**
 * @param {!proto.aerium.GetTotalStakeRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aerium.GetTotalStakeResponse>}
 *     Promise that resolves to the response
 */
proto.aerium.WalletPromiseClient.prototype.getTotalStake =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aerium.Wallet/GetTotalStake',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetTotalStake);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aerium.GetAddressInfoRequest,
 *   !proto.aerium.GetAddressInfoResponse>}
 */
const methodDescriptor_Wallet_GetAddressInfo = new grpc.web.MethodDescriptor(
  '/aerium.Wallet/GetAddressInfo',
  grpc.web.MethodType.UNARY,
  proto.aerium.GetAddressInfoRequest,
  proto.aerium.GetAddressInfoResponse,
  /**
   * @param {!proto.aerium.GetAddressInfoRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aerium.GetAddressInfoResponse.deserializeBinary
);


/**
 * @param {!proto.aerium.GetAddressInfoRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aerium.GetAddressInfoResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aerium.GetAddressInfoResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aerium.WalletClient.prototype.getAddressInfo =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aerium.Wallet/GetAddressInfo',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetAddressInfo,
      callback);
};


/**
 * @param {!proto.aerium.GetAddressInfoRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aerium.GetAddressInfoResponse>}
 *     Promise that resolves to the response
 */
proto.aerium.WalletPromiseClient.prototype.getAddressInfo =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aerium.Wallet/GetAddressInfo',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetAddressInfo);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aerium.SetAddressLabelRequest,
 *   !proto.aerium.SetAddressLabelResponse>}
 */
const methodDescriptor_Wallet_SetAddressLabel = new grpc.web.MethodDescriptor(
  '/aerium.Wallet/SetAddressLabel',
  grpc.web.MethodType.UNARY,
  proto.aerium.SetAddressLabelRequest,
  proto.aerium.SetAddressLabelResponse,
  /**
   * @param {!proto.aerium.SetAddressLabelRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aerium.SetAddressLabelResponse.deserializeBinary
);


/**
 * @param {!proto.aerium.SetAddressLabelRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aerium.SetAddressLabelResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aerium.SetAddressLabelResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aerium.WalletClient.prototype.setAddressLabel =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aerium.Wallet/SetAddressLabel',
      request,
      metadata || {},
      methodDescriptor_Wallet_SetAddressLabel,
      callback);
};


/**
 * @param {!proto.aerium.SetAddressLabelRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aerium.SetAddressLabelResponse>}
 *     Promise that resolves to the response
 */
proto.aerium.WalletPromiseClient.prototype.setAddressLabel =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aerium.Wallet/SetAddressLabel',
      request,
      metadata || {},
      methodDescriptor_Wallet_SetAddressLabel);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aerium.ListWalletRequest,
 *   !proto.aerium.ListWalletResponse>}
 */
const methodDescriptor_Wallet_ListWallet = new grpc.web.MethodDescriptor(
  '/aerium.Wallet/ListWallet',
  grpc.web.MethodType.UNARY,
  proto.aerium.ListWalletRequest,
  proto.aerium.ListWalletResponse,
  /**
   * @param {!proto.aerium.ListWalletRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aerium.ListWalletResponse.deserializeBinary
);


/**
 * @param {!proto.aerium.ListWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aerium.ListWalletResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aerium.ListWalletResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aerium.WalletClient.prototype.listWallet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aerium.Wallet/ListWallet',
      request,
      metadata || {},
      methodDescriptor_Wallet_ListWallet,
      callback);
};


/**
 * @param {!proto.aerium.ListWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aerium.ListWalletResponse>}
 *     Promise that resolves to the response
 */
proto.aerium.WalletPromiseClient.prototype.listWallet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aerium.Wallet/ListWallet',
      request,
      metadata || {},
      methodDescriptor_Wallet_ListWallet);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aerium.GetWalletInfoRequest,
 *   !proto.aerium.GetWalletInfoResponse>}
 */
const methodDescriptor_Wallet_GetWalletInfo = new grpc.web.MethodDescriptor(
  '/aerium.Wallet/GetWalletInfo',
  grpc.web.MethodType.UNARY,
  proto.aerium.GetWalletInfoRequest,
  proto.aerium.GetWalletInfoResponse,
  /**
   * @param {!proto.aerium.GetWalletInfoRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aerium.GetWalletInfoResponse.deserializeBinary
);


/**
 * @param {!proto.aerium.GetWalletInfoRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aerium.GetWalletInfoResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aerium.GetWalletInfoResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aerium.WalletClient.prototype.getWalletInfo =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aerium.Wallet/GetWalletInfo',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetWalletInfo,
      callback);
};


/**
 * @param {!proto.aerium.GetWalletInfoRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aerium.GetWalletInfoResponse>}
 *     Promise that resolves to the response
 */
proto.aerium.WalletPromiseClient.prototype.getWalletInfo =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aerium.Wallet/GetWalletInfo',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetWalletInfo);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aerium.ListAddressRequest,
 *   !proto.aerium.ListAddressResponse>}
 */
const methodDescriptor_Wallet_ListAddress = new grpc.web.MethodDescriptor(
  '/aerium.Wallet/ListAddress',
  grpc.web.MethodType.UNARY,
  proto.aerium.ListAddressRequest,
  proto.aerium.ListAddressResponse,
  /**
   * @param {!proto.aerium.ListAddressRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aerium.ListAddressResponse.deserializeBinary
);


/**
 * @param {!proto.aerium.ListAddressRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aerium.ListAddressResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aerium.ListAddressResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aerium.WalletClient.prototype.listAddress =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aerium.Wallet/ListAddress',
      request,
      metadata || {},
      methodDescriptor_Wallet_ListAddress,
      callback);
};


/**
 * @param {!proto.aerium.ListAddressRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aerium.ListAddressResponse>}
 *     Promise that resolves to the response
 */
proto.aerium.WalletPromiseClient.prototype.listAddress =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aerium.Wallet/ListAddress',
      request,
      metadata || {},
      methodDescriptor_Wallet_ListAddress);
};


module.exports = proto.aerium;

